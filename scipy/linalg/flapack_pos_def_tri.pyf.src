! Signatures for f2py-wrappers of FORTRAN LAPACK Positive Definite Tridiagonal Matrix functions.
!

subroutine <prefix>ptsv(n, nrhs, d, e, b, info)
    callstatement (*f2py_func)(&n, &nrhs, d, e, b, &n, &info);
    callprotoargument int*, int*, <ctypereal>*, <ctype>*, <ctype>*, int*, int*
    integer intent(hide), depend(d) :: n = len(d)
    integer intent(hide), depend(b) :: nrhs = shape(b, 1)
    <ftypereal> dimension(n), intent(in,out,copy) :: d
    <ftype> dimension(n-1), intent(in,out,copy,out=du), depend(n) :: e
    <ftype> dimension(n,nrhs), intent(in,out,copy,out=x), depend(n), check(shape(b,0)==n) :: b
    integer intent(out) :: info

end subroutine <prefix>ptsv

subroutine <prefix>pteqr(compz, n, d, e, z, ldz, work, info)
    ! d, e, z, work, info  = pteqr(d, e, z, compz="N", overwrite_d=0, overwrite_e=0, overwrite_z=0)
    ! CPTEQR computes all eigenvalues and, optionally, eigenvectors of a
    ! symmetric positive definite tridiagonal matrix by first factoring the
    ! matrix using SPTTRF and then calling CBDSQR to compute the singular
    ! values of the bidiagonal factor.
    !
    ! This routine computes the eigenvalues of the positive definite
    ! tridiagonal matrix to high relative accuracy.  This means that if the
    ! eigenvalues range over many orders of magnitude in size, then the
    ! small eigenvalues and corresponding eigenvectors will be computed
    ! more accurately than, for example, with the standard QR method.
    !
    ! The eigenvectors of a full or band positive definite Hermitian matrix
    ! can also be found if CHETRD, CHPTRD, or CHBTRD has been used to
    ! reduce this matrix to tridiagonal form.  (The reduction to
    ! tridiagonal form, however, may preclude the possibility of obtaining
    ! high relative accuracy in the small eigenvalues of the original
    ! matrix, if these eigenvalues range over many orders of magnitude.)
    callstatement (*f2py_func)(compz, &n, d, e, z, &ldz, work, &info)
    callprotoargument char*, int*, <ctypereal>*, <ctypereal>*, <ctype>*, int*, <ctypereal>*, int*

    character intent(in, optional), check(*compz=='N'||*compz=='V'||*compz=='I') :: compz='N'
    integer intent(hide), check(n > 1), depend(d) :: n = len(d)
    <ftypereal> intent(in,out,copy), dimension(n) :: d
    <ftypereal> intent(in,out,copy), depend(n), dimension(n-1) :: e
    <ftype> intent(in,out,copy), depend(n), dimension(ldz, n) :: z
    integer intent(hide), depend(z) :: ldz = max(1, shape(z, 0))
    <ftypereal> intent(out), dimension(4*n) :: work
    integer intent(out) :: info

end subroutine <prefix>pteqr
