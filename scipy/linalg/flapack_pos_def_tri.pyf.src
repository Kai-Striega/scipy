! Signatures for f2py-wrappers of FORTRAN LAPACK Positive Definite Tridiagonal Matrix functions.
!

subroutine <prefix>ptsv(n, nrhs, d, e, b, info)
    callstatement (*f2py_func)(&n, &nrhs, d, e, b, &n, &info);
    callprotoargument int*, int*, <ctypereal>*, <ctype>*, <ctype>*, int*, int*
    integer intent(hide), depend(d) :: n = len(d)
    integer intent(hide), depend(b) :: nrhs = shape(b, 1)
    <ftypereal> dimension(n), intent(in,out,copy) :: d
    <ftype> dimension(n-1), intent(in,out,copy,out=du), depend(n) :: e
    <ftype> dimension(n,nrhs), intent(in,out,copy,out=x), depend(n), check(shape(b,0)==n) :: b
    integer intent(out) :: info

end subroutine <prefix>ptsv

subroutine <prefix>pttrf(n, d, e, info)
    ! d, e, info  = pttrf(d, e, overwrite_d=0, overwrite_e=0)
    !
    ! ?PTTRF computes the L*D*L**T factorization of a symmetric positive
    ! definite tridiagonal matrix A.  The factorization may also be regarded as ! having the form A = U**T*D*U.

    callstatement (*f2py_func)(&n, d, e, &info)
    callprotoargument int*, <ctype>*, <ctype>*, int*

    integer intent(hide), depend(d), check(n > 1) :: n = len(d)
    <ftype> intent(in, out, copy), dimension(n) :: d
    <ftype> intent(in, out, copy), dimension(n - 1), depend(n) :: e
    integer intent(out) :: info

end subroutine <prefix>pttrf
